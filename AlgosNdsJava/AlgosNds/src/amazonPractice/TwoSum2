Input: nums = [1, 5, 1, 5, 1], target = 6

{
	1:5
	
}

[1,1,1,5,5,5,5]

{
	
}


Map<Integer,Integer> map = new HashMap<>();

for (int i=0; i<nums.length; i++) {
	complement = target-nums[i];
	if (map.containsKey(nums[i])) {
		map.put(nums[i], complement);
	}
}



int i=0, j=1;

while (i<nums.length-1 && j<nums.length) {
	int complement = target-nums[i];
	if (nums[i]==nums[j]) {
		if(!map.containsKey(nums[i])) {
			map.put(nums[i], complement);
		}
	}
}


Input: nums = [1, 5, 1, 5, 1], target = 6


{
	5:1,
	
}

count++

Set [1,5]


Map<Integer,Integer> map = new HashMap<>();
Set<Integer> set = new HashSet<>();

int count=0;
for (int i=0; i<nums.length; i++) {
	complement = target-nums[i];
	if (map.containsKey(nums[i])) {
	   if (!set.contains(nums[i])) {
			count++;
			set.add(complement);
			set.add(nums[i]);
	   }
	}else if (!set.contains(nums[i])){
		map.put(complement, nums[i]);
	}
}











































